{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NoteAppbar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","error","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValue","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NoteAppbar","NoteScreen","JournalEntry","style","backgroundSize","backgroundImage","entries","JournalEntries","map","Sidebar","signOut","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","class","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84584753.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCDdW9QNsfpNO2SrvjcmYejw6qgSTSYBco\",\n    authDomain: \"react-journal-app-5a5df.firebaseapp.com\",\n    databaseURL: \"https://react-journal-app-5a5df.firebaseio.com\",\n    projectId: \"react-journal-app-5a5df\",\n    storageBucket: \"react-journal-app-5a5df.appspot.com\",\n    messagingSenderId: \"702352382023\",\n    appId: \"1:702352382023:web:aac1299292aae89dc67962\"\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n","// Types\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading'\n\n}","import { types } from '../types/types';\n\nexport const setError = ( error ) => ({\n    type: types.uiSetError,\n    payload: error\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2';\n\nimport{ firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { finishLoading, startLoading } from './ui';\n\nexport const startLoginEmailPassword = ( email, password ) => {\n    return ( dispatch ) => {\n\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n\n            .then( ({ user }) => {\n                dispatch( finishLoading() );\n                dispatch( login( user.uid , user.displayName  ) );\n            })\n            .catch( e => {\n                console.log( e );\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            });\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\n\n    return ( dispatch ) => {\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                // agregar updateProfile para actualizar el displayName que es null por defecto\n                await user.updateProfile({ displayName: name });\n\n                dispatch( login(user.uid, user.displayName ) );\n            })\n            .catch( e => {\n                console.log( e );\n                Swal.fire('Error', e.message, 'error');\n            });\n    }\n\n}\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch( login(user.uid, user.displayName ) );\n            });\n    }\n}\n\nexport const login = ( uid, displayName ) => {\n\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n\n}\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({\n    type: types.logout\n});\n","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ]\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui );\n\n    const [ formValue, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n        // email: 'alejandro@gmail.com',\n        // password: 'SuperDuperPassword2020$'\n    });\n\n    const { email, password } = formValue;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password )) ;\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={ handleLogin }>\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    { ( loading ) ? 'Loading' : 'Login' }\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n            \n            </form>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nimport { removeError, setError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector( state => state.ui);\n\n    const [ formValue, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n        // name: 'Alejandro',\n        // email: 'alejandro@gmail.com',\n        // password: 'SuperDuperPassword2020$',\n        // password2: 'SuperDuperPassword2020$'\n    });\n\n    const { name, email, password, password2 } = formValue;\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n        \n        if ( isFormValid() ) {\n            dispatch( startRegisterWithEmailPasswordName( email, password, name) );\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') );\n            return false;\n        }\n        if( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is not valid') );\n            return false;\n        }\n        if ( password !== password2 || password < 5 ) {\n            dispatch( setError('Password should be at least 6 characters and match each other') );\n            return false;\n        }\n\n        dispatch( removeError() );\n\n        return true;\n\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Register</h3>\n\n            {\n                msgError &&\n                (\n                    <div className=\"auth__alert-error\">\n                        { msgError }\n                    </div>\n                )\n            }\n\n\n            <form onSubmit={ handleRegister }>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value= { name }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value= { email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value= { password }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value= { password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n            \n            </form>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth_box-container\">                \n                <Switch>\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>  \n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const NoteAppbar = () => {\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de noviembre de 2020</span>\n            <div>\n                <button className=\"btn\">\n                    Picture\n                </button>\n                <button className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { NoteAppbar } from './NoteAppbar';\n\nexport const NoteScreen = () => {\n    return (\n        <div className=\"notes__main-content\">\n\n            <NoteAppbar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                />\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                ></textarea>\n\n                <div className=\"notes__image\">\n                    <img\n                        src=\"https://d500.epimg.net/cincodias/imagenes/2019/10/17/lifestyle/1571308099_533301_1571308258_sumario_normal.jpg\"\n                        alt=\"imagen\"\n                    />\n                </div>\n\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react';\n\nexport const JournalEntry = () => {\n    return (\n        <div className=\"journal__entry pointer\">\n            <div\n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: 'url(https://d500.epimg.net/cincodias/imagenes/2019/10/17/lifestyle/1571308099_533301_1571308258_sumario_normal.jpg)'\n                }}\n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    Un nuevo dia\n                </p>\n                <p className=\"journal__entry-content\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis nam nobis deserunt.\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>Monday</span>\n                <h4>29</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { JournalEntry } from './JournalEntry';\n\nconst entries = [1,2,3,4,5,6,7,8,9,10];\n\nexport const JournalEntries = () => {\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                entries.map( value => (\n                    <JournalEntry key={ value } />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> Alejandro</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n\n            </div>\n\n            <div className=\"journal__new-entry\">\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New Entry\n                </p>\n            </div>\n\n            <JournalEntries />\n            \n        </aside>\n    )\n}\n","import React from 'react';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { Sidebar } from './Sidebar';\n// import { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n            <main>\n                {/* <NothingSelected /> */}\n                <NoteScreen />\n            </main>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route\n            { ...rest }\n            component={ ( props ) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n                    \n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route\n            { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { firebase } from '../firebase/firebase-config';\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState( true );\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\n\n    // Callback que esta pendiente de un cambio en la autenticación.\n    // El observable esta siempre pendiente del cambio en la autentiación.\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged( ( user ) => {\n            \n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn( true );\n            } else {\n                setIsLoggedIn( false );\n            }\n\n            setChecking( false );\n        });\n\n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n    if( checking ) {\n        return(\n            <div class=\"loading show\">\n                <div class=\"spin\"></div>\n            </div>\n        );\n    }\n\n    return (\n        <Router>\n            <div>\n                {\n                    \n                }\n                <div>\n                    <Switch>\n                        <PublicRoute\n                            path=\"/auth\"\n                            component={ AuthRouter }\n                            isAuthenticated={ isLoggedIn }\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/\"\n                            component={ JournalScreen }\n                            isAuthenticated={ isLoggedIn }\n                        />\n\n                        <Redirect to=\"/auth/login\" />\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    )\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        \n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n        \n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n            \n        default:\n            return state;\n    }\n\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { authReducer } from '../reducers/authReducer';\n\nimport thunk from 'redux-thunk';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer\n});\n\nexport const store = createStore( \n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    ),\n);","import { types } from '../types/types';\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case types.logout:\n            return { }\n    \n        default:\n            return state;\n    }\n\n}","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}