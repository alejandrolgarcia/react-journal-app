{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NoteAppbar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudinaryResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","error","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValue","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NoteAppbar","active","noteDate","moment","date","format","style","display","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","delete","startDelete","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","docRef","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3f0e7339.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCDdW9QNsfpNO2SrvjcmYejw6qgSTSYBco\",\n    authDomain: \"react-journal-app-5a5df.firebaseapp.com\",\n    databaseURL: \"https://react-journal-app-5a5df.firebaseio.com\",\n    projectId: \"react-journal-app-5a5df\",\n    storageBucket: \"react-journal-app-5a5df.appspot.com\",\n    messagingSenderId: \"702352382023\",\n    appId: \"1:702352382023:web:aac1299292aae89dc67962\"\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n","// Types\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout cleaning',\n\n}","\nexport const fileUpload = async (file) => {\n\n    const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dfatvsuac/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal-app');\n    formData.append('file', file);\n\n    try {\n        \n        const resp = await fetch(cloudinaryUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if (resp.ok) {\n            const cloudinaryResp = await resp.json();\n            return cloudinaryResp.secure_url;\n        } else {\n            throw await(resp.json());\n        }\n\n    } catch (error) {\n        throw await(error);\n    }\n\n}","import { db } from '../firebase/firebase-config';\n\nexport const loadNotes = async ( uid ) => {\n    \n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes = [];\n    \n    notesSnap.forEach( snapChild => {\n        notes.push({\n            id: snapChild.id,\n            ...snapChild.data()\n        });\n    });\n    return notes;\n}","import Swal from 'sweetalert2';\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types'; \n\n// react-journal-app\n\nexport const startNewNote = () => {\n    return async (dispatch, getState) => {\n        const uid = getState().auth.uid;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const docRef = await db.collection(`${ uid }/journal/notes`).add(newNote);\n        dispatch(activeNote(docRef.id, newNote));\n        dispatch(addNewNote(docRef.id, newNote));\n        \n    }   \n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n});\n\nexport const startLoadingNotes = (uid) => {\n    return async(dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNotes(notes));\n    }\n}\n\nexport const setNotes = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = (note) => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().auth;\n\n        if (!note.url) {\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\n\n        dispatch(refreshNote(note.id, note));\n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = (file) => {\n    return async (dispatch, getState) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n\n        dispatch(startSaveNote(activeNote));\n\n        Swal.close();\n    }\n\n}\n\nexport const startDelete = (id) => {\n    return async (dispatch, getState) => {\n\n        const uid = getState().auth.uid;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch(deleteNote(id));\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});","import { types } from '../types/types';\n\nexport const setError = ( error ) => ({\n    type: types.uiSetError,\n    payload: error\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2';\n\nimport{ firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { noteLogout } from './notes';\nimport { finishLoading, startLoading } from './ui';\n\nexport const startLoginEmailPassword = ( email, password ) => {\n    return ( dispatch ) => {\n\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n\n            .then( ({ user }) => {\n                dispatch( finishLoading() );\n                dispatch( login( user.uid , user.displayName  ) );\n            })\n            .catch( e => {\n                console.log( e );\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            });\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\n\n    return ( dispatch ) => {\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                // agregar updateProfile para actualizar el displayName que es null por defecto\n                await user.updateProfile({ displayName: name });\n\n                dispatch( login(user.uid, user.displayName ) );\n            })\n            .catch( e => {\n                console.log( e );\n                Swal.fire('Error', e.message, 'error');\n            });\n    }\n\n}\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch( login(user.uid, user.displayName ) );\n            });\n    }\n}\n\nexport const login = ( uid, displayName ) => {\n\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n\n}\n\nexport const startLogout = () => {\n    return async(dispatch) => {\n        await firebase.auth().signOut();\n\n        dispatch(logout());\n        dispatch(noteLogout())\n    }\n}\n\nconst logout = () => ({\n    type: types.logout\n});\n","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ]\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui );\n\n    const [ formValue, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValue;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password )) ;\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n                onSubmit={ handleLogin }\n                className=\"animate__animated animate__fadeIn\"\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    { ( loading ) ? 'Loading' : 'Login' }\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n            \n            </form>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nimport { removeError, setError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector( state => state.ui);\n\n    const [ formValue, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formValue;\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n        \n        if ( isFormValid() ) {\n            dispatch( startRegisterWithEmailPasswordName( email, password, name) );\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') );\n            return false;\n        }\n        if( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is not valid') );\n            return false;\n        }\n        if ( password !== password2 || password < 5 ) {\n            dispatch( setError('Password should be at least 6 characters and match each other') );\n            return false;\n        }\n\n        dispatch( removeError() );\n\n        return true;\n\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Register</h3>\n\n            {\n                msgError &&\n                (\n                    <div className=\"auth__alert-error\">\n                        { msgError }\n                    </div>\n                )\n            }\n\n\n            <form \n                onSubmit={ handleRegister }\n                className=\"animate__animated animate__fadeIn\"\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value= { name }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value= { email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value= { password }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value= { password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n            \n            </form>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth_box-container\">                \n                <Switch>\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>  \n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NoteAppbar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes);\n\n    const noteDate = moment(active.date);\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    }\n\n    const handleUploadPicture = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            dispatch(startUploading(file));\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>{ noteDate.format('MMMM Do YYYY') }</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handleUploadPicture }\n                >\n                    Picture\n                </button>\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDelete } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NoteAppbar } from './NoteAppbar';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector(state => state.notes);\n    const [formValues, handleInputChange, reset] = useForm(note);\n    const { title, body, id } = formValues;\n\n    const activeId = useRef(note.id);\n\n    useEffect(() => {\n\n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id;\n        }\n\n    }, [note, reset]);\n\n    useEffect(() => {\n        dispatch(activeNote(formValues.id, { ...formValues }));        \n    }, [formValues, dispatch]);\n\n    const handleDelete = () => {\n        dispatch(startDelete(id));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NoteAppbar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    name=\"title\"\n                    onChange={ handleInputChange }\n                />\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={ body }\n                    name=\"body\"\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    (note.url) && \n                    (\n                        <div className=\"notes__image\">\n                            <img\n                                src={ note.url }\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n            </div>\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, { id, date, title, body, url }));\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer animate__animated animate__backInLeft\"\n            onClick={ handleEntryClick }\n        >\n            {\n                url &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__entries animate__animated animate__backInLeft\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry\n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth );\n    \n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> Hola { name }</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New Entry\n                </p>\n            </div>\n\n            <JournalEntries />\n            \n        </aside>\n    )\n}\n","import React from 'react';\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content animate__animated animate__backInRight\">\n            <p>\n                Select something\n                <br />\n                create an entry!\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { Sidebar } from './Sidebar';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes );\n\n    return (\n        <div \n            className=\"journal__main-content animate__animated animate__fadeIn\"\n        >\n            \n            <Sidebar />\n\n            <main>\n                {\n                    ( active )\n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected /> )\n                }\n            </main>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route\n            { ...rest }\n            component={ ( props ) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n                    \n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route\n            { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { firebase } from '../firebase/firebase-config';\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    // Callback que esta pendiente de un cambio en la autenticación.\n    // El observable esta siempre pendiente del cambio en la autentiación.\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged(async(user) => {\n            \n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n                // Cuando la App se carga por primera vez obtener todos los notes.\n                dispatch(startLoadingNotes(user.uid));\n            } else {\n                setIsLoggedIn( false );\n            }\n\n            setChecking(false);\n        });\n\n    }, [dispatch, setChecking, setIsLoggedIn]);\n\n    if(checking) {\n        return(\n            <div className=\"loading show\">\n                <div className=\"spin\"></div>\n            </div>\n        );\n    }\n\n    return (\n        <Router>\n            <div>\n                {\n                    \n                }\n                <div>\n                    <Switch>\n                        <PublicRoute\n                            path=\"/auth\"\n                            component={ AuthRouter }\n                            isAuthenticated={ isLoggedIn }\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/\"\n                            component={ JournalScreen }\n                            isAuthenticated={ isLoggedIn }\n                        />\n\n                        <Redirect to=\"/auth/login\" />\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    )\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        \n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n        \n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n            \n        default:\n            return state;\n    }\n\n}","/*\n    {\n        notes:[]\n        active: null,\n        active: {\n            id: fkjdslfjsldf\n            title: '',\n            imageUrl: '',\n            date: 123345\n        }\n    }\n*/\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [\n                    action.payload,\n                    ...state.notes\n                ]\n            }\n\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n        \n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n        \n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            }\n        \n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n\n        default:\n            return state;\n    }\n\n}\n\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { authReducer } from '../reducers/authReducer';\n\nimport thunk from 'redux-thunk';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore( \n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    ),\n);","import { types } from '../types/types';\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case types.logout:\n            return { }\n    \n        default:\n            return state;\n    }\n\n}","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}